<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Xue&#39;s Homepage</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-06-02T05:25:44.115Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Shiqing Xue</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>OpenStack单节点安装</title>
    <link href="http://yoursite.com/2018/06/02/1_OpenStack%E5%8D%95%E8%8A%82%E7%82%B9%E5%AE%89%E8%A3%85/"/>
    <id>http://yoursite.com/2018/06/02/1_OpenStack单节点安装/</id>
    <published>2018-06-02T05:25:44.115Z</published>
    <updated>2018-06-02T05:25:44.115Z</updated>
    
    <content type="html"><![CDATA[<h1 id="OpenStack单节点单网卡安装"><a href="#OpenStack单节点单网卡安装" class="headerlink" title="OpenStack单节点单网卡安装"></a>OpenStack单节点单网卡安装</h1><h3 id="参考陈沙克日志"><a href="#参考陈沙克日志" class="headerlink" title="参考陈沙克日志"></a>参考陈沙克日志</h3><p><a href="http://www.chenshake.com/ubuntu-12-04-openstack-essex-installation-single-node/" target="_blank" rel="noopener">http://www.chenshake.com/ubuntu-12-04-openstack-essex-installation-single-node/</a></p><h3 id="作者：薛世卿"><a href="#作者：薛世卿" class="headerlink" title="作者：薛世卿"></a>作者：薛世卿</h3><p>如遇安装问题，可以咨询我。</p><p>注意，本文档不包含陈沙克的可选安装部分，这部分内容包括</p><ul><li>ntp服务器</li><li>ISCSI（供Nova-volume使用）</li><li>Nova-volume</li></ul><h2 id="一、准备系统"><a href="#一、准备系统" class="headerlink" title="一、准备系统"></a>一、准备系统</h2><h3 id="系统信息"><a href="#系统信息" class="headerlink" title="系统信息"></a>系统信息</h3><p>我安装的节点为 IVIC 云主机 IP为 10.210.0.94</p><h3 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h3><p>只需确保系统安装ssh server即可，然后更新源</p><pre><code>apt-get update &amp;&amp; apt-get -y dist-upgrade</code></pre><h3 id="设置网络"><a href="#设置网络" class="headerlink" title="设置网络"></a>设置网络</h3><p>编辑/etc/network/interfaces，IP地址和DNS根据实际情况调整。</p><pre><code>auto loiface lo inet loopbackauto eth0iface eth0 inet static  address 10.210.0.94  netmask 255.255.0.0  gateway 10.210.0.1  dns-nameserver 202.112.128.51auto eth0:0iface eth0:0 inet manualup ifconfig eth0:0 up</code></pre><h3 id="Bridge"><a href="#Bridge" class="headerlink" title="Bridge"></a>Bridge</h3><p>使用linux的bridge和iptables来实现OpenStack的网络配置</p><pre><code>apt-get -y install bridge-utils</code></pre><h3 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h3><p>你可以根据你的实际情况修改admin的密码和mysql的密码。下面文档和数据库相关的密码都是相同，你只需要修改novarc就可以。</p><p>运行完下面的命令，你再对novarc进行修改。</p><pre><code>cat &gt;/root/novarc &lt;&lt;EOFexport OS_TENANT_NAME=adminexport OS_USERNAME=adminexport OS_PASSWORD=passwordexport MYSQL_PASS=passwordexport SERVICE_PASSWORD=passwordexport FIXED_RANGE=10.0.0.0/24export FLOATING_RANGE=$(/sbin/ifconfig eth0 | awk &apos;/inet addr/ {print $2}&apos; | cut -f2 -d &quot;:&quot; | awk -F &quot;.&quot; &apos;{print $1&quot;.&quot;$2&quot;.&quot;$3}&apos;).224/27export OS_AUTH_URL=&quot;http://localhost:5000/v2.0/&quot;export SERVICE_ENDPOINT=&quot;http://localhost:35357/v2.0&quot;export SERVICE_TOKEN=$(openssl rand -hex 10)export MASTER=&quot;$(/sbin/ifconfig eth0 | awk &apos;/inet addr/ {print $2}&apos; | cut -f2 -d &quot;:&quot;)&quot;EOF</code></pre><p>我的novarc内容，与原博客不同的是，出于某种原因我注释掉了两行，具体原因我也不是很清楚了2333。</p><pre><code>ubuntu@mu:~$ sudo cat /root/novarcexport OS_TENANT_NAME=adminexport OS_USERNAME=adminexport OS_PASSWORD=passwordexport MYSQL_PASS=passwordexport SERVICE_PASSWORD=passwordexport FIXED_RANGE=10.0.0.0/24export FLOATING_RANGE=10.210.0.94/27export OS_AUTH_URL=&quot;http://localhost:5000/v2.0/&quot;#export SERVICE_ENDPOINT=&quot;http://localhost:35357/v2.0&quot;#export SERVICE_TOKEN=a23debc939158820de0fexport MASTER=&quot;10.210.0.94&quot;</code></pre><p>确认没有问题或者进行修改，运行</p><pre><code>source novarcecho &quot;source novarc&quot;&gt;&gt;.bashrc</code></pre><h2 id="MYSQL"><a href="#MYSQL" class="headerlink" title="MYSQL"></a>MYSQL</h2><p>在Openstack组件里，Nova，Keystone, Glance, 都需要用到数据库。所以我们需要创建相关的数据库和用户。</p><table border="1" cellspacing="0" cellpadding="2" width="693"><br><tbody><br><tr><br><td valign="top" width="286"><strong>应用数据库</strong></td><br><td valign="top" width="216"><strong>数据库用户</strong></td><br><td valign="top" width="189"><strong>密码</strong></td><br></tr><br><tr><br><td valign="top" width="297">mysql</td><br><td valign="top" width="224">root</td><br><td valign="top" width="196">password</td><br></tr><br><tr><br><td valign="top" width="297">nova</td><br><td valign="top" width="227">nova</td><br><td valign="top" width="200">password</td><br></tr><br><tr><br><td valign="top" width="294">glance</td><br><td valign="top" width="228">glance</td><br><td valign="top" width="203">password</td><br></tr><br><tr><br><td valign="top" width="292">keystone</td><br><td valign="top" width="228">keystone</td><br><td valign="top" width="205">password</td><br></tr><br><tr><br><td valign="top" width="291">&nbsp;</td><br><td valign="top" width="227">&nbsp;</td><br><td valign="top" width="206">&nbsp;</td><br></tr><br><tr><br><td valign="top" width="291">&nbsp;</td><br><td valign="top" width="227">&nbsp;</td><br><td valign="top" width="207">&nbsp;</td><br></tr><br></tbody><br></table><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>mysql自动安装</p><pre><code>cat &lt;&lt;MYSQL_PRESEED | debconf-set-selectionsmysql-server-5.5 mysql-server/root_password password $MYSQL_PASSmysql-server-5.5 mysql-server/root_password_again password $MYSQL_PASSmysql-server-5.5 mysql-server/start_on_boot boolean trueMYSQL_PRESEED</code></pre><p>Openstack都是Python写的，所以你需要python-mysqldb，安装过程，就不会提示你输入root密码</p><pre><code>apt-get install -y mysql-server python-mysqldb</code></pre><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>编辑/etc/mysql/my.cnf, 允许网络访问mysql</p><pre><code>#bind-address           = 127.0.0.1bind-address            = 0.0.0.0</code></pre><p>或者直接运行下面命令</p><pre><code>sed -i &apos;s/127.0.0.1/0.0.0.0/g&apos; /etc/mysql/my.cnf</code></pre><p>重启mysql服务</p><pre><code>service mysql restart</code></pre><p>创建相关数据库</p><pre><code>mysql -uroot -p$MYSQL_PASS &lt;&lt;EOFCREATE DATABASE nova;GRANT ALL PRIVILEGES ON nova.* TO &apos;nova&apos;@&apos;%&apos; IDENTIFIED BY &apos;$MYSQL_PASS&apos;;CREATE DATABASE glance;GRANT ALL PRIVILEGES ON glance.* TO &apos;glance&apos;@&apos;%&apos; IDENTIFIED BY &apos;$MYSQL_PASS&apos;;CREATE DATABASE keystone;GRANT ALL PRIVILEGES ON keystone.* TO &apos;keystone&apos;@&apos;%&apos;IDENTIFIED BY &apos;$MYSQL_PASS&apos;;FLUSH PRIVILEGES;EOF</code></pre><h2 id="Keystone"><a href="#Keystone" class="headerlink" title="Keystone"></a>Keystone</h2><p>Keystone是Openstack的核心，所有的组件，都需要通过keystone进行认证和授权。</p><table border="0" cellspacing="0" cellpadding="2" width="400"><br><tbody><br><tr><br><td valign="top" width="100">租户（tenant）</td><br><td valign="top" width="100">用户</td><br><td valign="top" width="100">密码</td><br><td valign="top" width="100">&nbsp;</td><br></tr><br><tr><br><td valign="top" width="100">admin</td><br><td valign="top" width="100">admin</td><br><td valign="top" width="100">password</td><br><td valign="top" width="100">&nbsp;</td><br></tr><br><tr><br><td valign="top" width="100">service</td><br><td valign="top" width="100">nova</td><br><td valign="top" width="100">password</td><br><td valign="top" width="100">&nbsp;</td><br></tr><br><tr><br><td valign="top" width="100">&nbsp;</td><br><td valign="top" width="100">glance</td><br><td valign="top" width="100">password</td><br><td valign="top" width="100">&nbsp;</td><br></tr><br><tr><br><td valign="top" width="100">&nbsp;</td><br><td valign="top" width="100">&nbsp;</td><br><td valign="top" width="100">&nbsp;</td><br><td valign="top" width="100">&nbsp;</td><br></tr><br><tr><br><td valign="top" width="100">&nbsp;</td><br><td valign="top" width="100">&nbsp;</td><br><td valign="top" width="100">&nbsp;</td><br><td valign="top" width="100">&nbsp;</td><br></tr><br></tbody><br></table><h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><pre><code>apt-get install -y keystone python-keystone python-keystoneclient</code></pre><h3 id="配置-1"><a href="#配置-1" class="headerlink" title="配置"></a>配置</h3><p>编辑/etc/keystone/keystone.conf，需要修改，注意数据库的连接IP和token根据自己的情况进行填写</p><ul><li>keystone的默认token是ADMIN，我这里修改成随机生成，查看novarc获得</li><li><p>默认是采用sqlite连接，我们需要改成mysql</p><!--你看不到我--><p>  [DEFAULT]<br>  #bind_host = 0.0.0.0<br>  public_port = 5000<br>  admin_port = 35357<br>  #admin_token = ADMIN<br>  admin_token = a23debc939158820de0f</p><p>  [database]<br>  #connection = sqlite:////var/lib/keystone/keystone.db<br>  connection = mysql://keystone:<a href="mailto:password@10.210.0.94" target="_blank" rel="noopener">password@10.210.0.94</a>/keystone<br>重启服务</p><p>  service keystone restart<br>同步keystone数据库</p><p>  keystone-manage db_sync</p></li></ul><p>keystone的数据库，需要导入数据和endpoint，你可以一步一步用命令行导入，可以参考keystone白皮书 <a href="http://www.canonical.com/about-canonical/resources/white-papers/configuring-keystone-openstack-essex" target="_blank" rel="noopener">http://www.canonical.com/about-canonical/resources/white-papers/configuring-keystone-openstack-essex</a></p><p>为了方便，你可以直接使用下面2个脚本来进行全部的设置。</p><ol><li><a href="http://www.chenshake.com/wp-content/uploads/2012/07/keystone_data.sh_.txt" target="_blank"> keystone_data.sh</a>导入用户信息</li><li><a href="http://www.chenshake.com/wp-content/uploads/2012/07/endpoints.sh_.txt" target="_blank">endpoints.sh</a>设置endpoint</li></ol><h3 id="Keystone-Data"><a href="#Keystone-Data" class="headerlink" title="Keystone Data"></a>Keystone Data</h3><pre><code>wget http://www.chenshake.com/wp-content/uploads/2012/07/keystone_data.sh_.txtmv keystone_data.sh_.txt keystone_data.shbash keystone_data.sh</code></pre><p>没任何输出，就表示正确，可以通过下面命令检查</p><pre><code>echo $?</code></pre><p>显示0，就表示脚本正确运行，千万不要重复运行脚本。</p><h3 id="Endpoint-导入"><a href="#Endpoint-导入" class="headerlink" title="Endpoint 导入"></a>Endpoint 导入</h3><pre><code>wget http://www.chenshake.com/wp-content/uploads/2012/07/endpoints.sh_.txtmv endpoints.sh_.txt endpoints.shbash endpoints.sh</code></pre><p>需要注意的是，这个脚本是假设你的glance服务和swift都是安装相同的服务器，如果你的glance在不同的服务器，你需要调整一下endpoint，可以在数据库里调整。</p><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>可以使用curl命令来测试。</p><p>命令如下</p><pre><code>curl -d &apos;{&quot;auth&quot;: {&quot;tenantName&quot;: &quot;admin&quot;, &quot;passwordCredentials&quot;:{&quot;username&quot;: &quot;admin&quot;, &quot;password&quot;: &quot;password&quot;}}}&apos; -H &quot;Content-type:application/json&quot; http://$MASTER:35357/v2.0/tokens | python -mjson.tool</code></pre><p>你就可以获得一个24小时的token。（注意，上面的脚本没有创建demo用户，所以没法用demo账号去测试）</p><pre><code>&quot;token&quot;: {        &quot;expires&quot;: &quot;2012-09-27T02:09:37Z&quot;,         &quot;id&quot;: &quot;c719448800214e189da04772c2f75e23&quot;,         &quot;tenant&quot;: {            &quot;description&quot;: null,             &quot;enabled&quot;: true,             &quot;id&quot;: &quot;dc7ca2e51139457dada2d0f7a3719476&quot;,             &quot;name&quot;: &quot;admin&quot;        }</code></pre><p>通过下面命令，可以检查keystone的设置是否正确。</p><pre><code>root@node:~# keystone user-list+----------------------------------+---------+----------------------+--------+|                id                | enabled |        email         |  name  |+----------------------------------+---------+----------------------+--------+| 1189d15892d24e00827e707bd2b7ab07 | True    | admin@chenshake.com  | admin  || cca4a4ed1e8842db99239dc98fb1617f | True    | glance@chenshake.com | glance || daccc34eacc7493989cd13df93e7f6bc | True    | swift@chenshake.com  | swift  || ee57b02c535d44f48943de13831da232 | True    | nova@chenshake.com   | nova   |+----------------------------------+---------+----------------------+--------+    root@node17:~# keystone endpoint-list+----------------------------------+-----------+-----------------------------------------------+-----------------------------------------------+------------------------------------------+|                id                |   region  |                   publicurl                   |                  internalurl                  |                 adminurl                 |+----------------------------------+-----------+-----------------------------------------------+-----------------------------------------------+------------------------------------------+| 0b04e1baac1a4c9fb07490e0911192cf | RegionOne | http://10.1.199.17:5000/v2.0 | http://10.1.199.17:5000/v2.0 | http://10.1.199.17:35357/v2.0 || 0d3315627d52419fa08095f9def5d7e4 | RegionOne | http://10.1.199.17:8776/v1/%(tenant_id)s | http://10.1.199.17:8776/v1/%(tenant_id)s | http://10.1.199.17:8776/v1/%(tenant_id)s || 1c92290cba9f4a278b42dbdf2802096c | RegionOne | http://10.1.199.17:9292/v1 | http://10.1.199.17:9292/v1 | http://10.1.199.17:9292/v1 || 56fe83ce20f341d99fc576770c275586 | RegionOne | http://10.1.199.17:8774/v2/%(tenant_id)s | http://10.1.199.17:8774/v2/%(tenant_id)s | http://10.1.199.17:8774/v2/%(tenant_id)s || 5fb51aae00684e56818869918f86b564 | RegionOne | http://10.1.199.17:8080/v1/AUTH_%(tenant_id)s | http://10.1.199.17:8080/v1/AUTH_%(tenant_id)s | http://10.1.199.17:8080/v1 || aaac7663872d493b85d9e583329be9ed | RegionOne | http://10.1.199.17:8773/services/Cloud | http://10.1.199.17:8773/services/Cloud | http://10.1.199.17:8773/services/Admin |+----------------------------------+-----------+-----------------------------------------------+-----------------------------------------------+------------------------------------------+</code></pre><p>可以使用下面命令来查看结果</p><pre><code>keystone tenant-listkeystone user-listkeystone role-list</code></pre><h2 id="Glance"><a href="#Glance" class="headerlink" title="Glance"></a>Glance</h2><h3 id="安装-2"><a href="#安装-2" class="headerlink" title="安装"></a>安装</h3><pre><code>apt-get install -y glance glance-api glance-client glance-common glance-registry python-glance</code></pre><h3 id="配置-2"><a href="#配置-2" class="headerlink" title="配置"></a>配置</h3><p>编辑 <strong>/etc/glance/glance-api-paste.ini</strong> ，修改文档最后3行</p><pre><code>#admin_tenant_name = %SERVICE_TENANT_NAME%#admin_user = %SERVICE_USER%#admin_password = %SERVICE_PASSWORD%admin_tenant_name = serviceadmin_user = glanceadmin_password = password</code></pre><p>编辑 <strong>/etc/glance/glance-registry.conf</strong> 和  <strong>/etc/glance/glance-api.conf</strong> ，改成使用mysql验证，作如下修改，ip地址根据自己情况设置。</p><pre><code>[database]#sql_connection = sqlite:////var/lib/glance/glance.sqlitesql_connection = mysql://glance:password@10.210.0.94/glance[keystone_authtoken]auth_host = 10.210.0.94auth_port = 35357auth_protocol = httpadmin_tenant_name = serviceadmin_user = glanceadmin_password = password[paste_deploy]flavor=keystone</code></pre><p>重启glance服务</p><pre><code>service glance-api restart &amp;&amp; service glance-registry restart</code></pre><p>同步glance数据库</p><pre><code># glance-manage version_control 0# glance-manage db_sync/usr/lib/python2.7/dist-packages/glance/registry/db/migrate_repo/versions/003_add_disk_format.py:47: SADeprecationWarning: useexisting is deprecated.  Use extend_existing.useexisting=True)</code></pre><p>重启glance服务</p><pre><code>service glance-api restart &amp;&amp; service glance-registry restart</code></pre><h3 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h3><pre><code>glance index</code></pre><p>没有输出，表示正常，因为目前还没有镜像。</p><h3 id="下载镜像"><a href="#下载镜像" class="headerlink" title="下载镜像"></a>下载镜像</h3><p>我们下载CirrOS的image作为测试使用，只有10M。如果是ubuntu官方的image，220M，并且ubuntu官方的image，都是需要使用密钥登陆。</p><h4 id="CirrOS"><a href="#CirrOS" class="headerlink" title="CirrOS"></a>CirrOS</h4><p>下载并上传image</p><pre><code>wget https://launchpad.net/cirros/trunk/0.3.0/+download/cirros-0.3.0-x86_64-disk.imgglance add name=cirros-0.3.0-x86_64 is_public=true  container_format=bare \disk_format=qcow2 &lt; /root/cirros-0.3.0-x86_64-disk.img</code></pre><p>Cirros，可以使用用户名和密码登陆，也可以使用密钥登陆</p><p>user:cirros \<br>password:cubswin:)</p><h4 id="Ubuntu官方image"><a href="#Ubuntu官方image" class="headerlink" title="Ubuntu官方image"></a>Ubuntu官方image</h4><p>下载并上传image</p><pre><code>wget http://cloud-images.ubuntu.com/precise/current/precise-server-cloudimg-amd64-disk1.imgglance add name=&quot;Ubuntu 12.04 cloudimg amd64&quot; is_public=true container_format=ovf \disk_format=qcow2 &lt; /root/precise-server-cloudimg-amd64-disk1.img</code></pre><p>user：ubuntu</p><p>只能使用密钥登陆。</p><h4 id="查看image"><a href="#查看image" class="headerlink" title="查看image"></a>查看image</h4><pre><code># glance indexID                                   Name                           Disk Format          Container Format     Size          ------------------------------------ ------------------------------ -------------------- -------------------- --------------5dcf84a0-b491-4710-8d7a-5531bce0dedc cirros-0.3.0-x86_64            qcow2                bare                        9761280f4f62d8a-3e5b-4136-8547-ce3cb79771aa Ubuntu 12.04 cloudimg amd64    qcow2                ovf                       230817792</code></pre><h2 id="Nova"><a href="#Nova" class="headerlink" title="Nova"></a>Nova</h2><h3 id="安装-3"><a href="#安装-3" class="headerlink" title="安装"></a>安装</h3><pre><code>apt-get install -y nova-api nova-cert nova-common nova-objectstore \nova-scheduler nova-volume nova-consoleauth novnc python-nova python-novaclient \nova-compute nova-compute-kvm  nova-network</code></pre><p>如果你希望控制节点，不打算跑计算服务，装完后，把nova compute的服务停掉也可以。</p><h3 id="配置-3"><a href="#配置-3" class="headerlink" title="配置"></a>配置</h3><p>编辑 <strong>/etc/nova/nova.conf</strong> 文件，</p><p>下面是我的nova.conf 文件的配置。</p><p>为了简单，大家直接copy下面内容，运行就可以，注意修改ip。</p><p>如果你是在虚拟机里安装，你需要把libvirt_type=kvm 改成 ibvirt_type=qemu</p><pre><code>[DEFAULT]dhcpbridge_flagfile=/etc/nova/nova.confdhcpbridge=/usr/bin/nova-dhcpbridgelogdir=/var/log/novastate_path=/var/lib/novalock_path=/var/lock/novaforce_dhcp_release=Trueiscsi_helper=tgtadmlibvirt_use_virtio_for_bridges=Trueconnection_type=libvirtroot_helper=sudo nova-rootwrap /etc/nova/rootwrap.confverbose=Trueec2_private_dns_show_ip=Trueapi_paste_config=/etc/nova/api-paste.inivolumes_path=/var/lib/nova/volumesenabled_apis=ec2,osapi_compute,metadatarpc_backend = rabbitrabbit_host = 10.210.0.94my_ip = 10.210.0.94vncserver_listen = 10.210.0.94vncserver_proxyclient_address = 10.210.0.94auth_strategy = keystone[keystone_authtoken]auth_uri = http://10.210.0.94:5000auth_host = 10.210.0.94auth_port = 35357auth_protocol = httpadmin_tenant_name = serviceadmin_user = novaadmin_password = password[database]connection = mysql://nova:password@10.210.0.94/nova</code></pre><p>设置目录权限</p><pre><code>chown -R nova:nova /etc/nova</code></pre><p>重启所有服务</p><pre><code>service rabbitmq-server restartservice libvirt-bin restartservice nova-scheduler restartservice nova-network restartservice nova-cert restartservice nova-compute restartservice nova-api restartservice nova-objectstore restartservice nova-volume restart</code></pre><p>也可以使用下面脚本进行重启</p><pre><code>#!/bin/bashfor a in rabbitmq-server libvirt-bin nova-network nova-cert nova-compute \nova-api nova-objectstore nova-scheduler nova-volume \novnc  nova-consoleauth; do service &quot;$a&quot; stop; donefor a in rabbitmq-server libvirt-bin nova-network nova-cert nova-compute \nova-api nova-objectstore nova-scheduler nova-volume \novnc  nova-consoleauth; do service &quot;$a&quot; start; done</code></pre><p>运行脚本</p><pre><code>bash restart.shStopping rabbitmq-server: rabbitmq-server.libvirt-bin stop/waitingnova-network stop/waitingnova-cert stop/waitingnova-compute stop/waitingnova-api stop/waitingnova-objectstore stop/waitingnova-scheduler stop/waitingnova-volume stop/waiting* Stopping OpenStack NoVNC proxy nova-novncproxy                 [ OK ] nova-consoleauth stop/waitingStarting rabbitmq-server: SUCCESSrabbitmq-server.libvirt-bin start/running, process 9683nova-network start/running, process 9703nova-cert start/running, process 9713nova-compute start/running, process 9724nova-api start/running, process 9734nova-objectstore start/running, process 9744nova-scheduler start/running, process 9759nova-volume start/running, process 9775* Starting OpenStack NoVNC proxy  nova-novncproxy                 [ OK ] nova-consoleauth start/running, process 9839</code></pre><p>同步数据库</p><pre><code>nova-manage db sync</code></pre><p>会有一堆的输出，不过应该是没问题的。nova数据库里已经有相应的表，就表示正确。</p><pre><code># nova-manage db sync2012-07-19 18:43:34 WARNING nova.utils [-] /usr/lib/python2.7/dist-packages/sqlalchemy/pool.py:639: SADeprecationWarning: The &apos;listeners&apos; argument to Pool (and create_engine()) is deprecated.  Use event.listen().Pool.__init__(self, creator, **kw)2012-07-19 18:43:34 WARNING nova.utils [-] /usr/lib/python2.7/dist-packages/sqlalchemy/pool.py:145: SADeprecationWarning: Pool.add_listener is deprecated.  Use event.listen()self.add_listener(l)2012-07-19 18:43:34 AUDIT nova.db.sqlalchemy.fix_dns_domains [-] Applying database fix for Essex dns_domains table.</code></pre><h3 id="创建fix-IP"><a href="#创建fix-IP" class="headerlink" title="创建fix IP"></a>创建fix IP</h3><p>FIX IP，就是分配给虚拟机的实际IP地址。这些数据都会写入数据库。$FIXED_RANGE 在novarc里设置。</p><pre><code>nova-manage network create private --fixed_range_v4=$FIXED_RANGE \--num_networks=1 --bridge=br100 --bridge_interface=eth1 \--network_size=256 --multi_host=T</code></pre><h3 id="创建floating-IP"><a href="#创建floating-IP" class="headerlink" title="创建floating IP"></a>创建floating IP</h3><p>所谓Floating IP，是亚马逊EC2的定义。简单说，就是公网的IP。他其实是通过类似防火墙类似，做一个映射。实际上是通过iptables来实现映射.</p><pre><code>nova-manage floating create --ip_range=$FLOATING_RANGE</code></pre><p>重启nova服务</p><pre><code>bash restart.sh libvirt-bin stop/waitingnova-network stop/waitingnova-cert stop/waitingnova-compute stop/waitingnova-api stop/waitingnova-objectstore stop/waitingnova-scheduler stop/waitingnova-volume stop/waiting* Stopping OpenStack NoVNC proxy nova-novncproxy                                           [ OK ] nova-consoleauth stop/waitinglibvirt-bin start/running, process 23232nova-network start/running, process 23252nova-cert start/running, process 23262nova-compute start/running, process 23273nova-api start/running, process 23285nova-objectstore start/running, process 23303nova-scheduler start/running, process 23321nova-volume start/running, process 23336* Starting OpenStack NoVNC proxy  nova-novncproxy                                          [ OK ] nova-consoleauth start/running, process 23386</code></pre><h2 id="测试-2"><a href="#测试-2" class="headerlink" title="测试"></a>测试</h2><p>可以尝试用下面命令去检查nova的状况</p><p>nova-manage service list</p><p>若state均为:-） \<br>说明安装成功</p><h4 id="命令行创建虚拟机的过程"><a href="#命令行创建虚拟机的过程" class="headerlink" title="命令行创建虚拟机的过程"></a>命令行创建虚拟机的过程</h4><pre><code>nova keypair-add oskey &gt; oskey.privchmod 600 oskey.privnova flavor-listnova image-listnova boot --flavor 2 --key_name oskey --image ea3ffba1-065e-483f-bfe2-c84184ee76be test1nova secgroup-add-rule default tcp 22 22 0.0.0.0/0nova secgroup-add-rule default icmp -1 -1 0.0.0.0/0</code></pre><p>这个时候，你在服务器上可以直接ssh到虚拟机上，ubuntu的虚拟机，用户是ubuntu。虚拟机的Ip</p><pre><code># nova list+--------------------------------------+-------+--------+------------------+|                  ID                  |  Name | Status |     Networks     |+--------------------------------------+-------+--------+------------------+| 61e93d62-c926-46fa-8e0c-48073b7e58b0 | test1 | ACTIVE | private=10.0.0.2 || 6976e539-32d9-48a6-9fb5-28a3cdb55f71 | test2 | ACTIVE | private=10.0.0.4 |+--------------------------------------+-------+--------+------------------+</code></pre><p>在服务器上直接ssh到虚拟机，如果你在远程，就需要分配floating IP。</p><pre><code>ssh -i oskey.priv ubuntu@10.0.0.4</code></pre><p>登陆虚拟机后，你可以查看一下路由</p><pre><code>$ routeKernel IP routing tableDestination     Gateway         Genmask         Flags Metric Ref    Use Ifacedefault         10.0.0.3        0.0.0.0         UG    100    0        0 eth010.0.0.0        *               255.255.255.0   U     0      0        0 eth0</code></pre><p>显示网关是10.0.0.3，这个时候，你看一下</p><pre><code>root@node:~# ifconfigbr100   Link encap:Ethernet  HWaddr 00:e0:81:d8:4a:23          inet addr:10.0.0.3  Bcast:10.0.0.255  Mask:255.255.255.0        inet6 addr: fe80::ccfc:5aff:fef5:4345/64 Scope:Link</code></pre><p>需要注意的是：br100的IP，需要你创建第一个虚拟机，他才会获得IP。</p><h2 id="Dashobard"><a href="#Dashobard" class="headerlink" title="Dashobard"></a>Dashobard</h2><h3 id="安装-4"><a href="#安装-4" class="headerlink" title="安装"></a>安装</h3><pre><code>apt-get install -y apache2 libapache2-mod-wsgi openstack-dashboard</code></pre><p>重启nova api</p><pre><code>restart nova-api</code></pre><p>这个时候，就可以访问dashboard。</p><h2 id="测试-3"><a href="#测试-3" class="headerlink" title="测试"></a>测试</h2><p>登陆dashobard，下面地址是我的horizon界面，可以直接访问，注：需要北航内网。</p><p><a href="http://10.210.0.94/horizon" target="_blank" rel="noopener">http://10.210.0.94/horizon</a> \<br>user:admin \<br>pass:password</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;OpenStack单节点单网卡安装&quot;&gt;&lt;a href=&quot;#OpenStack单节点单网卡安装&quot; class=&quot;headerlink&quot; title=&quot;OpenStack单节点单网卡安装&quot;&gt;&lt;/a&gt;OpenStack单节点单网卡安装&lt;/h1&gt;&lt;h3 id=&quot;参考陈沙克
      
    
    </summary>
    
    
      <category term="OpenStack" scheme="http://yoursite.com/tags/OpenStack/"/>
    
  </entry>
  
  <entry>
    <title>你好，Hexo</title>
    <link href="http://yoursite.com/2018/05/13/%E4%BD%A0%E5%A5%BD%EF%BC%8CHexo/"/>
    <id>http://yoursite.com/2018/05/13/你好，Hexo/</id>
    <published>2018-05-13T14:23:13.000Z</published>
    <updated>2018-05-13T14:23:13.092Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2018/05/13/hello-world/"/>
    <id>http://yoursite.com/2018/05/13/hello-world/</id>
    <published>2018-05-13T13:58:28.016Z</published>
    <updated>2018-05-13T13:58:28.016Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
